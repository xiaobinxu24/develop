/*
 *===================================================================
 *
 *          Name: rt_server_tcp.h
 *        Create: 2015年11月14日
 *
 *   Discription: 
 *       Version: 1.0.0
 *
 *        Author: zhangtao@roamter.com
 *
 *===================================================================
*/


#ifndef __RT_SERVER_TCP_H
#define __RT_SERVER_TCP_H

//*************************************************************
//函数名称：int rt_server_tcp_startconnect(int port)
//函数功能：在服务器端建立tcp通信连接，并监听端口
//直到客户端发送请求
//参数：int port——服务器要监听的端口
//返回值：
//			0			成功建立链接
//			-1			建立socket失败
//			-2			bind失败
//			-3			listen失败
//**************************************************************/
int rt_server_tcp_startconnect(unsigned int);

//*************************************************************
//函数名称：int rt_server_tcp_startaccept()
//函数功能：调用时即进入阻塞状态，等待用户进行连接，
			//在没有客户端进行连接时，程序停止在此处，
			//当有客户端进行连接时，程序马上执行一次，
			//然后再次循环到此处继续等待。
//参数：	无
//返回值：
//			0			程序正常退出
//			-1			accept失败
//**************************************************************/
int rt_server_tcp_startaccept();

//*************************************************************
//函数名称：int rt_server_tcp_send()
//函数功能：向客户端发送数据
//参数：	char *data			要发送的数据
//			int	data_len		要发送的数据字节长度
//返回值：
//			-1					发送失败
//			写出的字节书		发送成功	
//**************************************************************/
int rt_server_tcp_send(char *data, int data_len);
//*************************************************************
//函数名称：int rt_server_tcp_read(char *read_buf)
//函数功能：接收数据
//参数：	char *read_buf		是指向一个用于接收信息的数据缓冲区
//返回值：
//			-1					接收失败
//			接收到的字节数		接收成功	
//**************************************************************/
int rt_server_tcp_read(char *read_buf);
//*************************************************************
//函数名称：int rt_server_tcp_closesocket()  
//函数功能：关闭socket
//参数：	无
//返回值：
//			0					关闭成功
//**************************************************************/
int rt_server_tcp_closesocket();

//*************************************************************
//函数名称：int rt_server_tcp_closeaccept()  
//函数功能：关闭accept
//参数：	无
//返回值：
//			0					关闭成功
//**************************************************************/
int rt_server_tcp_closeaccept();


#endif
/*=============== End of file: rt_server_tcp.h ==========================*/                                  
